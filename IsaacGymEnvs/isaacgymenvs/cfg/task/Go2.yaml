# used to create the object
name: Go2

physics_engine: 'physx'

# Environment Configuration
env:
  numEnvs: ${resolve_default:512,${...num_envs}}
  envSpacing: 3.  # Spacing between environment instances, set to 4 meters [m]
  numActions: 12
  numObservations: 48 

  # Defines friction coefficients and restitution for the plane surface.
  plane:
    staticFriction: 1.0  # [-]
    dynamicFriction: 1.0  # [-]
    restitution: 0.        # [-]

  # Sets the initial position, rotation, linear velocity, and angular velocity of the robot.
  baseInitState:
    pos: [0.0, 0.0, 0.35] # x,y,z [m]
    rot: [0.0, 0.0, 0.0, 1.0] # x,y,z,w [quat]
    vLinear: [0.0, 0.0, 0.0]  # x,y,z [m/s]
    vAngular: [0.0, 0.0, 0.0]  # x,y,z [rad/s]

  # Defines the velocity ranges for the robot in the x and y directions and for yaw rotation.
  randomCommandVelocityRanges:
    linear_x: [0.5, 2.] # min max [m/s]
    linear_y: [0., 0.]   # min max [m/s]
    yaw: [0., 0.]          # min max [rad/s]

  # PD control parameters, including stiffness, damping, action scaling, and control frequency.
  control:
    # PD Drive parameters:
    stiffness: 85.0  # [N*m/rad]
    damping: 2.0     # [N*m*s/rad]
    actionScale: 0.5
    controlFrequencyInv: 1 # 50HZ

  # Default joint angles of the robot, used for initial posture.
  defaultJointAngles:  # = target angles when action = 0.0
    FL_hip_joint: 0.1    # [rad]
    RL_hip_joint: 0.1    # [rad]
    FR_hip_joint: -0.1   # [rad]
    RR_hip_joint: -0.1   # [rad]

    FL_thigh_joint: 0.8     # [rad]
    RL_thigh_joint: 1.    # [rad]
    FR_thigh_joint: 0.8     # [rad]
    RR_thigh_joint: 1.    # [rad]

    FL_calf_joint: -1.5    # [rad]
    RL_calf_joint: -1.5     # [rad]
    FR_calf_joint: -1.5    # [rad]
    RR_calf_joint: -1.5     # [rad]

  # Configures URDF model parameters, including whether the base is fixed, joint drive mode, and other options.
  urdfAsset:
    collapseFixedJoints: True
    fixBaseLink: False
    defaultDofDriveMode: 4 # see GymDofDriveModeFlags (0 is none, 1 is pos tgt, 2 is vel tgt, 4 effort)

  # Learning Configuration
  learn:
    allowKneeContacts: False
    # rewards
    terminalReward: 0.0
    linearVelocityXYRewardScale: 1.0
    linearVelocityZRewardScale: -4.0
    angularVelocityXYRewardScale: -0.05
    angularVelocityZRewardScale: 0.5
    orientationRewardScale: -0. #-1.
    torqueRewardScale: -0.00002 # -0.000025
    jointAccRewardScale: -0.0005 # -0.0025
    baseHeightRewardScale: -0.0 #5
    feetAirTimeRewardScale:  1.0
    kneeCollisionRewardScale: -0.25 
    feetStumbleRewardScale: -0. #-2.0
    actionRateRewardScale: -0.01

    # cosmetics
    hipRewardScale: -0. #25

    # normalization
    linearVelocityScale: 2.0
    angularVelocityScale: 0.25
    dofPositionScale: 1.0
    dofVelocityScale: 0.05

    # episode length in seconds
    episodeLength_s: 50

  # set to True if you use camera sensors in the environment
  enableCameraSensors: False

# Simulation Configuration
sim:
  dt: 0.02
  substeps: 2
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: 4
    solver_type: 1
    use_gpu: ${contains:"cuda",${....sim_device}}
    num_position_iterations: 4
    num_velocity_iterations: 1
    contact_offset: 0.02
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    default_buffer_size_multiplier: 5.0
    num_subscenes: 4
    contact_collection: 1 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (broken - do not use!)
