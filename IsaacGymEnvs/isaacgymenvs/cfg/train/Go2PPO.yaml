params:
  seed: ${...seed} # Controls randomness to ensure experiment reproducibility.

  algo:
    name: a2c_continuous

  model:
    name: continuous_a2c_logstd

  network:
    name: actor_critic # indicating an Actor-Critic structured neural network.
    separate: False # the policy and value networks share some parameters.

    space:
      continuous:
        mu_activation: None
        sigma_activation: None
        # Specify the initial weight settings
        mu_init:
          name: default
        sigma_init:
          name: const_initializer
          val: 0. # std = 1.
        fixed_sigma: True #the variance is not trainable.

    # The structure of the MLP, with hidden layers [256, 128, 64], activation function elu, and d2rl disabled.
    mlp:
      units: [256, 128, 64]
      activation: elu
      d2rl: False

      # configurations for the weight initializer and regularizer
      initializer:
        name: default
      regularizer:
        name: None

  load_checkpoint: ${if:${...checkpoint},True,False} # flag which sets whether to load the checkpoint
  load_path: ${...checkpoint} # path to the checkpoint to load

  config:
    name: ${resolve_default:Go2,${....experiment}} # Experiment name
    full_experiment_name: ${.name}
    env_name: rlgpu
    multi_gpu: ${....multi_gpu} # Multi-GPU training switch.
    ppo: True # a training process based on PPO.
    mixed_precision: True # Enables mixed precision training to improve efficiency.
    normalize_input: True # Normalization for inputs
    normalize_value: True # Normalization for values.
    value_bootstrap: True # Enables value bootstrapping.
    num_actors: ${....task.env.numEnvs}
    reward_shaper: # Configures reward scaling factor.
      scale_value: 1.0
    normalize_advantage: True
    # Discount factor and GAE smoothing factor.
    gamma: 0.99
    tau: 0.95
    e_clip: 0.2
    entropy_coef: 0.0
    # Initial learning rate and adaptive scheduling method.
    learning_rate: 3.e-4 # overwritten by adaptive lr_schedule
    lr_schedule: adaptive
    kl_threshold: 0.008 # target kl for adaptive lr
    # Control gradient clipping and the maximum gradient norm.
    truncate_grads: True
    grad_norm: 1.
    # Time horizon, batch size, and number of minibatch epochs.
    horizon_length: 24
    minibatch_size: 4096
    mini_epochs: 5
    # Loss coefficient for the critic network and value clipping.
    critic_coef: 2
    clip_value: True
    seq_len: 4 # Sequence length, used only for RNN. only for rnn
    bounds_loss_coef: 0.001 # Coefficient for boundary loss.

    max_epochs: ${resolve_default:1000,${....max_iterations}} #Maximum number of training epochs
    # Save the model at specified frequencies after a certain epoch.
    save_best_after: 200
    save_frequency: 50
    score_to_win: 20000 # Reaching this score is considered a "win."
    print_stats: True # Enables printing of statistical information.
